# Copyright (C) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/test.gni")
import("../../../../test_template.gni")
import("../adlt_common.gni")
import("test_src_adlt_cfi.gni")

group("adlt_cfi_test") {
    testonly = true
    deps = []

    foreach(s, adlt_cfi_test) {
        deps += [ ":${s}" ]
    }
}

config("post_lib_configs") {
    cflags_cc = [ "-fsanitize=cfi", "-fsanitize-cfi-cross-dso", "-flto", "-fvisibility=default",
    "-fno-sanitize-trap=cfi", "-fsanitize-recover=cfi", "-Wno-unused-but-set-variable", ]
    ldflags = [ "-Wl,--unresolved-symbols=ignore-all", "-Wl,-lclang_rt.ubsan_standalone" ]
}

adlt_executable("unittest_adlt_cfi_call_cast") {
    lib_name = "cfi_call_cast"
    lib_include_dirs = [ "call-cast" ]
    lib_configs = [
        {
            name = "cfi_call_cast_call"
            sources = [ "call-cast/call.cpp" ]
            external_deps = [ "bounds_checking_function:libsec_shared" ]
        },
        {
            name = "cfi_call_cast_cast"
            sources = [ "call-cast/cast.cpp" ]
        }
    ]

    lib_common_configs = [
        ":post_lib_configs"
    ]

    configs = lib_common_configs
    include_dirs = lib_include_dirs
    sources = [ "call-cast/main.cpp" ]
}

adlt_executable("unittest_adlt_cfi_cross_dso_dtor") {
    lib_name = "cfi_cross_dso_dtor"
    lib_include_dirs = [ "cross-dso/dtor" ]
    lib_configs = [
        {
            name = "cfi_cross_dso_dtor_base"
            sources = [ "cross-dso/dtor/libbase.cpp" ]
        },
        {
            name = "cfi_cross_dso_dtor_use"
            sources = [ "cross-dso/dtor/libuse.cpp" ]
            deps = [ ":cfi_cross_dso_dtor_base" ]
        }
    ]

    lib_common_configs = [
        ":post_lib_configs"
    ]

    configs = lib_common_configs
    include_dirs = lib_include_dirs
    sources = [ "cross-dso/dtor/cfi_dtor_test.cpp" ]
}

adlt_executable("unittest_adlt_cfi_cross_dso_ldso") {
    lib_name = "cfi_cross_dso_ldso"
    lib_include_dirs = [ "cross-dso/ldso" ]
    lib_configs = [
        {
            name = "cfi_cross_dso_ldso_test"
            sources = [ "cross-dso/ldso/cfi_test_lib.cpp" ]
        }
    ]

    lib_common_configs = [
        ":post_lib_configs"
    ]

    configs = lib_common_configs
    include_dirs = lib_include_dirs
    sources = [ "cross-dso/ldso/cfi_test_exe.cpp" ]
}

adlt_shared_library("cfi_cross_dso_simple") {
    include_dirs = [ "cross-dso/simple" ]
    lib_configs = [
        {
            name = "cfi_cross_dso_simple_pass1"
            sources = [ "cross-dso/simple/simple-pass.cpp" ]
            cflags = [ "-DSHARED_LIB1" ]
        },
        {
            name = "cfi_cross_dso_simple_pass2"
            sources = [ "cross-dso/simple/simple-pass.cpp" ]
            cflags = [ "-DSHARED_LIB2" ]
        },
        {
            name = "cfi_cross_dso_simple_fail1"
            sources = [ "cross-dso/simple/simple-fail.cpp" ]
            cflags = [ "-DSHARED_LIB1" ]
            external_deps = [ "bounds_checking_function:libsec_shared" ]
        },
        {
            name = "cfi_cross_dso_simple_fail2"
            sources = [ "cross-dso/simple/simple-fail.cpp" ]
            cflags = [ "-DSHARED_LIB2" ]
            external_deps = [ "bounds_checking_function:libsec_shared" ]
        },
    ]

    configs = [
        ":post_lib_configs"
    ]
}

ohos_executable("unittest_adlt_cfi_cross_dso_simple_pass") {
    testonly = true
    subsystem_name = "musl"
    part_name = "libc-test"
    configs = [ "//third_party/musl/libc-test/src/common:config_runtest" ]

    include_dirs = [
        "//third_party/musl/libc-test/src/functionalext/adlt/common",
        "//third_party/musl/libc-test/src/functionalext/common",
        "//third_party/musl/porting/linux/user/include",
        "//third_party/musl/libc-test/src/common",
        "cross-dso/simple"
    ]

    configs += [
        ":post_lib_configs"
    ]
    ldflags = [ "-Wl,-rpath=./:/data/local/tmp/libc-test-lib/" ]
    sources = [ "cross-dso/simple/simple-pass.cpp" ]
    deps = [ "../:adlt_common", ":cfi_cross_dso_simple", ":cfi_cross_dso_simple_pass1", ":cfi_cross_dso_simple_pass2" ]
}

ohos_executable("unittest_adlt_cfi_cross_dso_simple_fail") {
    testonly = true
    subsystem_name = "musl"
    part_name = "libc-test"
    configs = [ "//third_party/musl/libc-test/src/common:config_runtest" ]

    include_dirs = [
        "//third_party/musl/libc-test/src/functionalext/adlt/common",
        "//third_party/musl/libc-test/src/functionalext/common",
        "//third_party/musl/porting/linux/user/include",
        "//third_party/musl/libc-test/src/common",
        "cross-dso/simple"
    ]

    configs += [
        ":post_lib_configs"
    ]
    ldflags = [ "-Wl,-rpath=./:/data/local/tmp/libc-test-lib/" ]
    sources = [ "cross-dso/simple/simple-fail.cpp" ]
    deps = [ "../:adlt_common", ":cfi_cross_dso_simple", ":cfi_cross_dso_simple_fail1", ":cfi_cross_dso_simple_fail2" ]
    external_deps = [ "bounds_checking_function:libsec_shared" ]
}

action("unittest_adlt_cfi_cross_dso_simple") {
    testonly = true
    deps = [
        ":unittest_adlt_cfi_cross_dso_simple_pass",
        ":unittest_adlt_cfi_cross_dso_simple_fail",
    ]

    script = "../adlt_tools.py"
    args = [ "build_sym_links",
        "--lib-dir", rebase_path(adlt_lib_dir, ""),
        "--target-lib-dir", adlt_target_lib_dir,
        "--adlt-lib", "libadlt_cfi_cross_dso_simple.so",
        "--orig-lib-list",
            "libadlt_cfi_cross_dso_simple_pass1.so",
            "libadlt_cfi_cross_dso_simple_pass2.so",
            "libadlt_cfi_cross_dso_simple_fail1.so",
            "libadlt_cfi_cross_dso_simple_fail2.so",
    ]

    outputs = [
        "$adlt_lib_dir/adlt_orig_libs/libadlt_cfi_cross_dso_simple_pass1.so",
        "$adlt_lib_dir/adlt_orig_libs/libadlt_cfi_cross_dso_simple_pass2.so",
        "$adlt_lib_dir/adlt_orig_libs/libadlt_cfi_cross_dso_simple_fail1.so",
        "$adlt_lib_dir/adlt_orig_libs/libadlt_cfi_cross_dso_simple_fail2.so",
    ]
}